# Define the PInvoke function signature for NetShareEnum
$signature = @"
[DllImport("netapi32.dll", CharSet = CharSet.Unicode)]
public static extern uint NetShareEnum(
    string servername,
    uint level,
    out IntPtr bufptr,
    uint prefmaxlen,
    out uint entriesread,
    out uint totalentries,
    IntPtr resume_handle
);
"@

# Load the PInvoke signature into the current PowerShell session
Add-Type -MemberDefinition $signature -Namespace Win32 -Name NetApi32

# Call NetShareEnum to get a list of local shares
$shares = New-Object System.Collections.Generic.List[System.String]
$bufPtr = [IntPtr]::Zero
$entriesRead = 0
$totalEntries = 0
$resumeHandle = [IntPtr]::Zero

$retval = [Win32.NetApi32]::NetShareEnum($null, 1, [ref]$bufPtr, [System.UInt32]::MaxValue, [ref]$entriesRead, [ref]$totalEntries, $resumeHandle)

if ($retval -eq 0) {
    # Marshal the returned buffer into an array of SHARE_INFO_1 structs
    $ptrType = [System.Runtime.InteropServices.Marshal]::SizeOf([Win32.ShareInfo1])
    for ($i = 0; $i -lt $entriesRead; $i++) {
        $share = [Win32.ShareInfo1]::PtrToStructure([IntPtr]::Add($bufPtr, $ptrType * $i))
        $shares.Add($share.shi1_netname)
    }

    # Free the returned buffer
    [Win32.NetApi32]::NetApiBufferFree($bufPtr) | Out-Null

    # Output the list of shares
    Write-Host "Local shares:"
    $shares
}
else {
    Write-Error "NetShareEnum failed with error code $retval"
}
